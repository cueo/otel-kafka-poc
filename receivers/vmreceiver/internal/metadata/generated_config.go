// Code generated by mdatagen. DO NOT EDIT.

package metadata

import "go.opentelemetry.io/collector/confmap"

// MetricConfig provides common config for a particular metric.
type MetricConfig struct {
	Enabled bool `mapstructure:"enabled"`

	enabledSetByUser bool
}

func (ms *MetricConfig) Unmarshal(parser *confmap.Conf) error {
	if parser == nil {
		return nil
	}
	err := parser.Unmarshal(ms, confmap.WithErrorUnused())
	if err != nil {
		return err
	}
	ms.enabledSetByUser = parser.IsSet("enabled")
	return nil
}

// MetricsConfig provides config for vmstats metrics.
type MetricsConfig struct {
	Active          MetricConfig `mapstructure:"active"`
	BlocksReceived  MetricConfig `mapstructure:"blocks_received"`
	BlocksSent      MetricConfig `mapstructure:"blocks_sent"`
	Buffered        MetricConfig `mapstructure:"buffered"`
	Cached          MetricConfig `mapstructure:"cached"`
	ContextSwitches MetricConfig `mapstructure:"context_switches"`
	Free            MetricConfig `mapstructure:"free"`
	IdleTime        MetricConfig `mapstructure:"idle_time"`
	Inactive        MetricConfig `mapstructure:"inactive"`
	Interrupts      MetricConfig `mapstructure:"interrupts"`
	IoWaitTime      MetricConfig `mapstructure:"io_wait_time"`
	RunnableProcs   MetricConfig `mapstructure:"runnable_procs"`
	StolenTime      MetricConfig `mapstructure:"stolen_time"`
	SwapIn          MetricConfig `mapstructure:"swap_in"`
	SwapOut         MetricConfig `mapstructure:"swap_out"`
	Swapped         MetricConfig `mapstructure:"swapped"`
	SystemTime      MetricConfig `mapstructure:"system_time"`
	TotalProcs      MetricConfig `mapstructure:"total_procs"`
	UserTime        MetricConfig `mapstructure:"user_time"`
}

func DefaultMetricsConfig() MetricsConfig {
	return MetricsConfig{
		Active: MetricConfig{
			Enabled: true,
		},
		BlocksReceived: MetricConfig{
			Enabled: true,
		},
		BlocksSent: MetricConfig{
			Enabled: true,
		},
		Buffered: MetricConfig{
			Enabled: true,
		},
		Cached: MetricConfig{
			Enabled: true,
		},
		ContextSwitches: MetricConfig{
			Enabled: true,
		},
		Free: MetricConfig{
			Enabled: true,
		},
		IdleTime: MetricConfig{
			Enabled: true,
		},
		Inactive: MetricConfig{
			Enabled: true,
		},
		Interrupts: MetricConfig{
			Enabled: true,
		},
		IoWaitTime: MetricConfig{
			Enabled: true,
		},
		RunnableProcs: MetricConfig{
			Enabled: true,
		},
		StolenTime: MetricConfig{
			Enabled: true,
		},
		SwapIn: MetricConfig{
			Enabled: true,
		},
		SwapOut: MetricConfig{
			Enabled: true,
		},
		Swapped: MetricConfig{
			Enabled: true,
		},
		SystemTime: MetricConfig{
			Enabled: true,
		},
		TotalProcs: MetricConfig{
			Enabled: true,
		},
		UserTime: MetricConfig{
			Enabled: true,
		},
	}
}

// MetricsBuilderConfig is a configuration for vmstats metrics builder.
type MetricsBuilderConfig struct {
	Metrics MetricsConfig `mapstructure:"metrics"`
}

func DefaultMetricsBuilderConfig() MetricsBuilderConfig {
	return MetricsBuilderConfig{
		Metrics: DefaultMetricsConfig(),
	}
}
